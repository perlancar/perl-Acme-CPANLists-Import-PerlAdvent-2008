<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by Pod::Advent 0.14 (Pod::Simple 3.07, Perl::Tidy 20031021) on 2008-12-23 22:53:17 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2008 Perl Advent Calendar: Resolution for next year: 1280x1024 or better</title>
<link rel="stylesheet" href="../style.css" type="text/css" />
<link rel="alternate" type="text/plain" href="mod23.pod" />
</head>
<body>
<h1><a href="../">Perl Advent Calendar 2008-12</a>-23</h1>
<h2 align="center">Resolution for next year: 1280x1024 or better</h2>
<h3 align="center">by Yanick Champoux</h3>
<p>The problem with New Year resolutions is that they are always so&hellip; radical. It's always "I'll never do this again", or "from now on, I'll always do that." No wonder everyone breaks them even before Boxing Day sales are over: only saints can switch from indulgence to intransigence in the blink of an eye.</p>
<p>Programmers are no exception. Undoubtedly, on New Year's you'll vow to up your level of leetness, and perhaps make use of some of the widgets you've read about here. In the new year, your code is going to be leaner, meaner and better documented. It'll read like Tolstoy, and run like Seabiscuit. Oh yes, from now on, it's going to be best practices all the way. The straight and narrow is going to be your only path, and <tt>Perl::Critic</tt> is going to be your shepherd.</p>
<p>And so, high on your new resolution, you'll rush to add <a href="../../2005/12/">Test::Perl::Critic</a> to our distribution's tests (perhaps even with some custom rules)&hellip; and that's when the bubble bursts &#x00a4; Your new-found enthusiasm is suddenly crushed. Your hopes for a better life flattened. If you have a reasonably large and flabby suite of scripts or modules, chances are with even the gentlest <tt>Perll::Critic</tt> you'll wind up staring numbly at screens upon screens upon screens of remonstrances and warnings. Surely, you'll think, there is no way I can fix those thousands of violations. You'll sigh, remove the test, and resort to eggnog dregs to soothe the pain.</p>
<p>It needn't be that way. The key to success is to realize that gradual change is easier to achieve than a sudden overhaul. This is where <tt><a href="http://search.cpan.org/perldoc?Test::Perl::Critic::Progressive">Test::Perl::Critic::Progressive</a></tt> saves the day, and your self-esteem.</p>
<p><tt>TPC::Progressive</tt> is meant to slowly ease a codebase into conformance. Instead of enforcing an "all-or-nothing" approach, its test will pass as long as the number of violations for the current run is less or equal than it was on previous runs. That way, it can be added to a distribution without automatically dooming it to a long-term stay in test failure purgatory.</p>
<p>But, of course, your resolution is not to only keep your modules at their current level of excellence, but rather to elevate them to perfection. No problem: with some extra setting <tt>TPC::Progressive</tt> can require that, to be successful, new test runs must knock out a minimum number of violations. Thus the unmovable mountain is reduced into a pile of small, manageable pebbles. A <span style="font-weight: bold">big</span> pile of pebbles, mind you. But then, that's why it's called a <span style="font-weight: bold">New Year's</span> resolution, and not a <span style="font-weight: bold">new week's</span> resolution, isn't it?</p>
<a name="mod23.pl" id="mod23.pl"></a><h2><a href="mod23.pl">mod23.pl</a></h2><pre>
   1 <span class="k">use</span> <span class="w">strict</span><span class="sc">;</span>
   2 <span class="k">use</span> <span class="w">warnings</span><span class="sc">;</span>
   3 <span class="k">use</span> <span class="w">Test::More</span><span class="sc">;</span>
   4 <span class="k">use</span> <span class="w">Data::Dumper</span><span class="sc">;</span>
   5 
   6 <span class="k">use</span> <span class="w">Test::Perl::Critic::Progressive</span> <span class="q">':all'</span><span class="sc">;</span>
   7 
   8 <span class="i">set_total_step_size</span><span class="s">(</span><span class="n">3</span><span class="s">)</span><span class="sc">;</span>    <span class="c"># must remove 3 violations each run</span>
   9 
  10 <span class="i">set_step_size_per_policy</span><span class="s">(</span>  <span class="c"># must remove at least one of those too</span>
  11     <span class="q">'ValuesAndExpressions::ProhibitNoisyQuotes'</span> <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span>
  12 <span class="s">)</span><span class="sc">;</span>
  13 
  14 <span class="i">progressive_critic_ok</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
  15 
  16 <span class="c"># show summary of violations, beginning with the</span>
  17 <span class="c"># worst offender</span>
  18 
  19 <span class="k">my</span> <span class="i">$file</span> = <span class="i">get_history_file</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
  20 
  21 <span class="k">my</span> <span class="i">%violation</span> = <span class="i">%</span>{ <span class="i">$</span>{ <span class="k">do</span> <span class="i">$file</span> }[<span class="n">-1</span>] }<span class="sc">;</span>    <span class="c"># get last run</span>
  22 
  23 <span class="k">for</span> <span class="s">(</span>
  24     <span class="k">reverse</span> <span class="k">sort</span> <span class="s">{</span> <span class="i">$violation</span>{<span class="i">$a</span>} &lt;=&gt; <span class="i">$violation</span>{<span class="i">$b</span>} <span class="s">}</span>
  25     <span class="k">keys</span> <span class="i">%violation</span>
  26   <span class="s">)</span> <span class="s">{</span>
  27 
  28     <span class="k">last</span> <span class="k">unless</span> <span class="i">$violation</span>{<span class="i">$_</span>}<span class="sc">;</span>    <span class="c"># don't report policies with no violation</span>
  29 
  30     <span class="w">diag</span> <span class="k">sprintf</span> <span class="q">&quot;%3d %s\n&quot;</span><span class="cm">,</span> <span class="i">$violation</span>{<span class="i">$_</span>}<span class="cm">,</span> <span class="i">$_</span><span class="sc">;</span>
  31 
  32 <span class="s">}</span>
  33 
</pre>
<div style="float: right; font-size: 10pt"><a href="mod23.pod">View Source (POD)</a></div><br />
</body>
</html>
