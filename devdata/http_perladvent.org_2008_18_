<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by Pod::Advent 0.14 (Pod::Simple 3.07, Perl::Tidy 20031021) on 2008-12-18 22:05:12 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2008 Perl Advent Calendar: The Toy-O-Matic (3000X!)</title>
<link rel="stylesheet" href="../style.css" type="text/css" />
<link rel="alternate" type="text/plain" href="mod18.pod" />
</head>
<body>
<h1><a href="../">Perl Advent Calendar 2008-12</a>-18</h1>
<h2 align="center">The Toy-O-Matic (3000X!)</h2>
<h3 align="center">by Steve Scaffidi &amp; Jerrad Pierce</h3>
<p>Elves are a creative bunch. Really, they're <span style="font-style: italic">constantly</span> tweaking, updating, and adding features and options to the Toy-O-Matic (3000X!). What, you've never <span style="font-style: italic">heard</span> of the <span style="font-weight: bold">Toy-O-Matic</span>? (3000X!) Well let me tell you about it! It slices, it dices, it can build just about any toy you can dream up! Sound complicated? You betcha! But elves are good engineers and the whole thing is driven by simple, elf-readable configuration files. In the beginning though, was the Doll-O-Matic. It accepted only a few parameters:</p>
<pre><span class="c">  gender=male
  jacket=red
  pants=green # just like an elf!</span></pre>
<p>But that was enough that the elves could offer dozens of custom dolls to suit most sensible requests. Better yet, because they were using <tt><a href="http://search.cpan.org/perldoc?Config::General">Config::General</a></tt>, only a few changes to the code were necessary to allow each elf to edit the configs as they wanted&mdash;within reason&mdash;and actually expect it to work!</p>
<pre>
  -<span class="k">my</span> <span class="i">$config</span> = <span class="w">Config::General</span><span class="w">-&gt;new</span><span class="s">(</span> <span class="i">$cfg_file</span> <span class="s">)</span><span class="sc">;</span>
  +<span class="k">my</span> <span class="i">$config</span> = <span class="w">Config::General</span><span class="w">-&gt;new</span><span class="s">(</span> 
  +   -<span class="w">ConfigFile</span>     <span class="cm">=&gt;</span> <span class="i">$cfg_file</span><span class="cm">,</span>
  +   -<span class="w">SplitDelimiter</span> <span class="cm">=&gt;</span> <span class="q">'\s*(?:\:|=|-&gt;)\s*|\s+'</span><span class="cm">,</span>
  +   -<span class="w">SplitPolicy</span>    <span class="cm">=&gt;</span> <span class="q">'custom'</span><span class="s">)</span><span class="sc">;</span>
</pre>

<p>Now, even after several elves had commited edits of differing styles, <tt>Config::General</tt> could DWIM</p>
<pre><span class="c">  gender:  female
  #We're out of green dresses, blue is sort of like green, right? -Murphy
  #dress=green
  dress blue
  hairbow-&gt;pink #Arrows rule!</span></pre>
<p>Elves love Perl because, like them, it serves to please&hellip; and Config::General is <span style="font-style: italic">very</span> Perlish!</p>
<p>Before long, this level of customization simply wasn't enough. Seriously, when have you ever heard (grand)parents complain about anything today being <span style="font-style: italic">simpler</span>? Therefore, the Doll-O-Matic was retooled and renamed Toy-O-Matic (3000X!) to match. Now it could make more than dolls, but it's configuration remained straight-forward and flexible, even though a single file could contain parameters for a number of toys. An Army Dude with a Deluxe Rocket Launcher for Jimmy, a Modern Career Woman with the Malibu Accessory Set for Lisa and an Elf! for Tim.</p>
<pre><span class="c">  &lt;toy elf_doll&gt;
      Include <a href="elf.cfg">elf.cfg</a>
  &lt;/toy&gt;

  &lt;toy army_dude&gt;
      nationality = antarctica
      accessories = rocket launcher
      accessories = jeep
      accessories = backpack
      speaks      = Viper commander is over the hill! Cover me! GO! GO! GO!
  &lt;/toy&gt;

  &lt;toy career_woman&gt;
      phone = Raspberry 200
      &lt;car&gt;
          make = BMVV
          model = M3
          color = pink
      &lt;/car&gt;
      hair = perfect
      speaks =&lt;&lt;END_PHRASE
Buy! Sell! Buy! Sell! 
Call my lawyer, check on the babysitter, 
book me a flight to london!
END_PHRASE
  &lt;/toy&gt;</span></pre>
<p>That's right, <tt>Config::General</tt> supports heredocs, (globbing) of includes, and Apache-style structured files! Many elves work as webmasters in the off-season, so these latter features were second nature to them. Plus, the resulting data structures are easily inspected and understood:</p>
<pre>% perl -MConfig::General -MData::Dumper -e "print Dumper{Config::General-&gt;new(-ConfigFile=&gt;'@ARGV',-UseApacheInclude=&gt;1)-&gt;getall()}" <a href="toys.conf">toys.conf</a><span class="c">
$VAR1 = {
           'toy' =&gt; {
                      'jimmy_doll' =&gt; {
                                        'pants' =&gt; 'green',
                                        'jacket' =&gt; 'red',
                                        'gender' =&gt; 'male'
                                      },
                      'career_woman' =&gt; {
                                          'car' =&gt; {
                                                     'color' =&gt; 'pink',
                                                     'make' =&gt; 'BMVV',
                                                     'model' =&gt; 'M3'
                                                   },
                                          'speaks' =&gt; 'Buy! Sell! Buy! Sell!
Call my lawyer, check on the babysitter, 
book me a flight to london!',
                                          'hair' =&gt; 'perfect',
                                          'phone' =&gt; 'Raspberry 200'
                                        },
                      'army_dude' =&gt; {
                                       'speaks' =&gt; 'Viper commander is over the hill! Cover me! GO! GO! GO!',
                                       'accessories' =&gt; [
                                                          'rocket launcher',
                                                          'jeep',
                                                          'backpack'
                                                        ],
                                       'nationality' =&gt; 'antarctica'
                                     }
                    }
         };</span></pre>
<p>The hacker elves were also quite happy to learn that <tt>Config::General</tt> also write configuration files from raw data structures. They even created a GUI for designing new toys, and the results were written out to disk. Productivity soared, creativity blossomed, and kids were happy everywhere!</p>
<a name="mod18.pl" id="mod18.pl"></a><h2><a href="mod18.pl">mod18.pl</a></h2><pre>
   1 #!/usr/bin/env perl
   2 <span class="k">use</span> <span class="w">Config::General</span><span class="sc">;</span>
   3 <span class="k">use</span> <span class="w">Doll::O::Matic</span><span class="sc">;</span>
   4 <span class="k">my</span> <span class="i">$cfg_file</span> = <span class="k">shift</span> <span class="i">@ARGV</span> || <span class="k">die</span> <span class="q">&quot;Please specify a config file!\n&quot;</span><span class="sc">;</span>
   5 
   6 
   7 <span class="k">my</span> <span class="i">$config</span> = <span class="w">Config::General</span><span class="w">-&gt;new</span><span class="s">(</span> 
   8 				  -<span class="w">ConfigFile</span>     <span class="cm">=&gt;</span> <span class="i">$cfg_file</span><span class="cm">,</span>
   9 				  -<span class="w">SplitDelimiter</span> <span class="cm">=&gt;</span> <span class="q">'\s*(?:\:|=|-&gt;)\s*|\s+'</span><span class="cm">,</span>
  10 				  -<span class="w">SplitPolicy</span>    <span class="cm">=&gt;</span> <span class="q">'custom'</span><span class="cm">,</span>
  11 <span class="s">)</span><span class="sc">;</span>
  12 
  13 <span class="k">my</span> <span class="i">%doll_params</span> = <span class="i">$config</span><span class="i">-&gt;getall</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
  14 
  15 
  16 <span class="k">my</span> <span class="i">$doll_o_matic</span> = <span class="w">Doll::O::Matic</span><span class="w">-&gt;new</span><span class="s">(</span> \<span class="i">%doll_params</span> <span class="s">)</span><span class="sc">;</span>
  17 <span class="k">my</span> <span class="i">$doll</span> = <span class="i">$doll_o_matic</span><span class="i">-&gt;make_doll</span><span class="s">(</span><span class="s">)</span> <span class="k">or</span> <span class="k">die</span><span class="s">(</span><span class="i">$doll_o_matic</span><span class="i">-&gt;error</span> . <span class="q">&quot;\n&quot;</span><span class="s">)</span><span class="sc">;</span>
  18 
  19 <span class="k">print</span> <span class="q">&quot;$doll is ready!\nPlease send to the giftwrapping station.\n&quot;</span><span class="sc">;</span>
</pre>
<a name="mod18b.pl" id="mod18b.pl"></a><h2><a href="mod18b.pl">mod18b.pl</a></h2><pre>
   1 #!/usr/bin/env perl
   2 <span class="k">use</span> <span class="w">Config::General</span><span class="sc">;</span>
   3 
   4 <span class="k">my</span> <span class="i">$toy_data</span> = <span class="s">{</span>
   5 		<span class="w">toy</span> <span class="cm">=&gt;</span> <span class="s">{</span>
   6 			<span class="w">game_sphere_360</span> <span class="cm">=&gt;</span> <span class="s">{</span>
   7 					    <span class="w">accessories</span> <span class="cm">=&gt;</span> <span class="s">[</span>
   8 							    <span class="q">'duck zapper'</span><span class="cm">,</span>
   9 							    <span class="q">'balance board'</span><span class="cm">,</span>
  10 							    <span class="q">'gyro-bot'</span><span class="cm">,</span>
  11 							   <span class="s">]</span><span class="cm">,</span>
  12 					    <span class="w">controllers</span> <span class="cm">=&gt;</span> <span class="n">2</span><span class="cm">,</span>
  13 					    <span class="w">output</span>      <span class="cm">=&gt;</span> <span class="q">'HDTV'</span><span class="cm">,</span>
  14 					    <span class="w">games</span>       <span class="cm">=&gt;</span> <span class="s">{</span>
  15 							    <span class="w">rpg</span>    <span class="cm">=&gt;</span> <span class="q">&quot;The Legend of Esmerelda&quot;</span><span class="cm">,</span>
  16 							    <span class="w">sports</span> <span class="cm">=&gt;</span> <span class="q">&quot;Madder Foosball, '09&quot;</span><span class="cm">,</span>
  17 							    <span class="w">racing</span> <span class="cm">=&gt;</span> <span class="q">&quot;North Pole Position&quot;</span><span class="cm">,</span>
  18 							    <span class="w">action</span> <span class="cm">=&gt;</span> <span class="q">&quot;Zombie Reindeer Hunter 2&quot;</span><span class="cm">,</span>
  19 							    <span class="w">puzzle</span> <span class="cm">=&gt;</span> <span class="q">&quot;Lonely Elf Solitaire&quot;</span><span class="cm">,</span>
  20 							   <span class="s">}</span><span class="cm">,</span>
  21 					   <span class="s">}</span><span class="cm">,</span>
  22 		       <span class="s">}</span><span class="cm">,</span>
  23 	       <span class="s">}</span><span class="sc">;</span>
  24 
  25 <span class="k">my</span> <span class="i">$config</span> = <span class="w">Config::General</span><span class="w">-&gt;new</span><span class="s">(</span> 
  26 				  -<span class="w">StoreDelimiter</span> <span class="cm">=&gt;</span> <span class="q">' = '</span><span class="cm">,</span>
  27 				  -<span class="w">LowerCaseNames</span> <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span>
  28 				  -<span class="w">SaveSorted</span>     <span class="cm">=&gt;</span> <span class="n">1</span><span class="cm">,</span>
  29 				 <span class="s">)</span><span class="sc">;</span>
  30 
  31 <span class="k">my</span> <span class="i">$cfg_file</span> = <span class="q">&quot;game_sphere.conf&quot;</span><span class="sc">;</span>
  32 
  33 <span class="c"># This method always returns undef unless it croaks.</span>
  34 <span class="c"># That is the only thing I don't like about this module!</span>
  35 <span class="k">eval</span> <span class="s">{</span> ! <span class="i">$config</span><span class="i">-&gt;save_file</span><span class="s">(</span> <span class="i">$cfg_file</span><span class="cm">,</span> <span class="i">$toy_data</span> <span class="s">)</span> <span class="s">}</span> <span class="k">or</span> <span class="k">die</span> <span class="i">$@</span><span class="sc">;</span>
  36 
  37 <span class="k">print</span> <span class="q">&quot;Toy config saved to file $cfg_file\n&quot;</span><span class="sc">;</span>
</pre>
<div style="float: right; font-size: 10pt"><a href="mod18.pod">View Source (POD)</a></div><br />
</body>
</html>
