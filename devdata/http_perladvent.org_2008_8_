<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by Pod::Advent 0.07 (Pod::Simple 3.03, Perl::Tidy 20031021) on 2008-12-09 01:41:06 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2008 Perl Advent Calendar: Running in a filtered wonderland</title>
<link rel="stylesheet" href="../style.css" type="text/css" />
<link rel="alternate" href="8.pod" type="text/plain" /></head>

<body>
<h1><a href="../">Perl Advent Calendar 2008-12</a>-08</h1>
<h2 align="center">Running in a filtered wonderland</h2>
<h3 align="center">by Jerrad Pierce</h3>
<p>The jolly old elf enjoys milk and cookies, no spam and phish, so he recently deployed a <tt><a href="http://spamassassin.org">SpamAssassin</a></tt> solution for his network. However, he had a bunch of legacy systems that needed to be plugged into the workflow as well, so he attempted to parse all incoming mail through a filter that would pass messages through <tt><span class="w">spamc</span></tt> after the other message mangling had taken place. All that business of daemons with forks and zombie children sent shivers down his spine, so he decided to work with pipes. The Friendly Manual suggested <tt>IPC::Open2</tt> as the solution to his naive <tt><span class="k">open</span><span class="s">(</span><span class="w">SPAM</span><span class="cm">,</span> <span class="q">'|/bin/spamc|'</span><span class="s">)</span></tt>, and soon Santa discovered that classic toy though they may be, blocks are no fun when it comes to interprocess communication.</p>
<p>Had Santa searched CPAN he might have discovered <tt><a href="http://search.cpan.org/search?module=IPC::Filter">IPC::Filter</a></tt>, a module intended to simplify the exchange of data between a script and sieving subprocess. To do so, it wraps <tt>IPC::Open3</tt> up tightly along with other goodies to yield such an amazingly simple interface that there's not much left to be said:</p>
<pre>
<span class="k">use</span> <span class="w">IPC::Filter</span> <span class="q">'filter'</span><span class="sc">;</span>

<span class="i">$b</span> = <span class="i">filter</span><span class="s">(</span><span class="i">$a</span><span class="cm">,</span> <span class="q">'/usr/bin/spamc'</span><span class="s">)</span><span class="sc">;</span>
</pre>

</body>
</html>
