<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by Pod::Advent 0.14 (Pod::Simple 3.07, Perl::Tidy 20031021) on 2008-12-24 19:14:14 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2008 Perl Advent Calendar: Xmas sort of title</title>
<link rel="stylesheet" href="../style.css" type="text/css" />
<link rel="alternate" type="text/plain" href="mod24.pod" />
</head>
<body>
<h1><a href="../">Perl Advent Calendar 2008-12</a>-24</h1>
<h2 align="center">Xmas sort of title</h2>
<h3 align="center">by Jerrad Pierce</h3>
<p>The somewhat awkwardly named <tt><a href="http://search.cpan.org/perldoc?Sort::Half::Maker">Sort::Half::Maker</a></tt> is a pretty interesting little chunk of code. A one-off developed by the author to dump data with important keys first, it allows you to "sort by example" as in our code sample which yields:</p>
<pre><span class="c">Rudolph,Dasher,Dancer,Prancer,Vixen,Comet,Cupid,Dunder,Blixem,Chet,Olive</span></pre>
<p>Other uses for it might be to ensure that in a sorted list of contestants, those who placed sort accordingly, while everyone else sorts alphabetically; perhaps with no-shows or disqualified individuals bringing up the rear. This would require a multi-step sort where placed contestants are sorted by rank into a <tt><span class="w">start</span></tt>, whose results are then referenced by the &frac12; maker.</p>
<a name="mod24.pl" id="mod24.pl"></a><h2><a href="mod24.pl">mod24.pl</a></h2><pre>
   1 <span class="k">use</span> <span class="w">Sort::Half::Maker</span> <span class="q">'make_halfsort'</span><span class="sc">;</span>
   2 
   3 <span class="c">#Hooray for tuples</span>
   4 <span class="k">my</span> <span class="i">@order</span> = <span class="s">(</span><span class="w">Dasher</span><span class="cm">=&gt;</span><span class="w">Dancer</span><span class="cm">,</span>
   5 	     <span class="w">Prancer</span><span class="cm">=&gt;</span><span class="w">Vixen</span><span class="cm">,</span>
   6 	     <span class="w">Comet</span><span class="cm">=&gt;</span><span class="w">Cupid</span><span class="cm">,</span>
   7 	     <span class="w">Dunder</span><span class="cm">=&gt;</span><span class="w">Blixem</span><span class="s">)</span><span class="sc">;</span>
   8 
   9 <span class="c">#&hellip;and a Rudy to lead!</span>
  10 <span class="k">unshift</span> <span class="i">@order</span><span class="cm">,</span> <span class="q">'Rudolph'</span><span class="sc">;</span>
  11 
  12 
  13 <span class="c">#Pseudo-random order</span>
  14 <span class="k">my</span> <span class="i">@data</span> = <span class="q">qw/Dunder Blixem Dasher Dancer Prancer Vixen</span>
  15               <span class="q">Rudolph Comet Cupid Olive Chet/</span><span class="sc">;</span>
  16 
  17 <span class="i">$sub</span> = <span class="i">make_halfsort</span><span class="s">(</span><span class="w">start</span> <span class="cm">=&gt;</span> \<span class="i">@order</span><span class="s">)</span><span class="sc">;</span>
  18 <span class="k">print</span> <span class="k">join</span><span class="s">(</span><span class="q">','</span><span class="cm">,</span> <span class="k">sort</span> <span class="i">$sub</span> <span class="i">@data</span><span class="s">)</span><span class="cm">,</span> <span class="q">&quot;\n&quot;</span><span class="sc">;</span>
</pre>
<h3>See Also</h3>
<p><tt><a href="http://search.cpan.org/perldoc?Sort::ByExample">Sort::ByExample</a></tt> - without <tt><span class="w">end</span></tt>, but with <tt><span class="w">fallback</span></tt>, transmogrification and dependencyitis</p>
<div style="float: right; font-size: 10pt"><a href="mod24.pod">View Source (POD)</a></div><br />
</body>
</html>
